package br.com.taking.ProjetoGestaoRH.repository;


import java.util.Date;
import java.util.List;

import org.springframework.data.jpa.repository.JpaRepository;
import org.springframework.data.jpa.repository.Query;
import org.springframework.data.repository.query.Param;

import br.com.taking.ProjetoGestaoRH.model.Candidato;

public interface CandidatoRepository extends JpaRepository<Candidato, Integer>{
	
	
	// FILTRO DE CANDIDATO POR DOCUMENTO DE IDENTIFICAÇÃO
	@Query("select c from Candidato c where c.identificationDocument = :identificationDocument")
	List<Candidato> findAll(String identificationDocument);
	
	// FILTRO DE CANDIDATO POR GÊNERO
	@Query("select c from Candidato c where c.gender_id.gender_id = :gender")
	List<Candidato> findByGender(int gender);
	
	// FILTRO DE CANDIDATO POR AREA DE INTERESSE
	@Query("select c from Candidato c join c.areaInterest_id a where a.areaInterest_id = :areaInterest")
	List<Candidato> findByAreaInterest(int areaInterest);
	
	// FILTRO DE CANDIDATO POR INTERVALO DE IDADE
	@Query("select c from Candidato c where DATE_FORMAT(CURDATE(), '%Y') - DATE_FORMAT(c.birthdate, '%Y') >= :age1 " +
	            "and DATE_FORMAT(CURDATE(), '%Y') - DATE_FORMAT(c.birthdate, '%Y') <= :age2 " +
	            "and DATE_FORMAT(CURDATE(), '%Y') - DATE_FORMAT(c.birthdate, '%Y') <= 35 " +
	            "and DATE_FORMAT(CURDATE(), '%Y') - DATE_FORMAT(c.birthdate, '%Y') >= 18")
	List<Candidato> filterAges(int age1, int age2);
	

	//FILTRO CANDIDATO
	@Query("SELECT c "
			+ "FROM Candidato c "
			+ "JOIN c.areaInterest_id ai "
			+ "JOIN area_interest aint"
			+ "JOIN c.academicQualification_id ac "
			+ "JOIN course co "
			+ "JOIN institution in "
			+ "JOIN c.workExperience_id we "
			+ "JOIN c.languagesskill_id ls "
			+ "JOIN c.city_id city "
			+ "JOIN city.state_id state "
			+ "JOIN state.country_id "
			+ "WHERE "
			
			 //buca por documento de identificacao 
			+ "(c.identificationDocument = :identificationDocument) "
			
			// busca por genero
			+ "OR (c.gender_id.gender_id = :gender) "    
			
			// busca por area de interesse     
			+ "OR (c.areaInterest_id.areaInterest_id = :area_interest) "	
			
			// busca por palavra chave area de interesse
			+ "OR  (c.areaInterest_id.areaInterest_id = ai.areaInterest_id " 
			+ "AND ai.areaInterest_id. = aint.areaInterest_id "
			+ "AND aint.areaName like :areaInterestname) "
			
			// busca por papel desempenhado
			+ "OR  (c.workExperience_id.workExperience_id = we.workExperience_id "
			+ "AND (we.role_id.role_id = :role) "
			
			// busca por palavra chave nome da compania 
			+ "OR  (we.workExperience_id.companyName like :companyName) "
			
			// busca por palavra chave de atividade realizadas
			+ "OR  (we.workExperience_id.companyName like :activitiesPerformed)) "
			
			// busca por formacao e status
			+ "OR (c.academicQualification_id.academicQualification_id = ac.academicQualification_id "
			+ "AND (ac.academicQualification_id.formation_id = :formation "
			+ "AND ac.academicQualification_id.status_id = :status) "
			
			// busca por intituicao
			+ "OR  (ac.academicQualification_id.institution_id = :institution) "
			
			// busca por curso
			+ "OR  (ac.academicQualification_id.course_id = :course) "
			
			// busca por palavra chave nome do curso
			+ "OR  (ac.academicQualification_id.course_id = co.course_id "
			+ "AND co.courseName like :coursename) "
			
			// busca por palavra chave nome da instituicao de ensino
			+ "OR  (ac.academicQualification_id.institution_id =  in.institution_id "
			+ "AND in.institutionName like :institutionname)) "
			
			// busca por cidade
			+ "OR  (c.city_id.city_id = city.city_id "
			+ "AND (city.city_id = :city) "
			
			// busca por cidade estado
			+ "OR (city.city_id = state.city_id "
			+ "AND state.state_id = :state) "
			
			// busca por pais
			+ "OR  (city.city_id = state.city_id "
			+ "AND state.state_id = country.state_id "
			+ "AND country.country_id = :country)) "
			
			// busca por idioma e nivel de proficiencia 
			+ "OR  (c.languagesskill_id.languagesskill_id = ls.languagesskill_id "
			+ "AND (ls.languagesskill_id.language_id = :languages "
			+ "AND ls.languagesskill_id.level_id = :level) "
			
			// busca por idioma
			+ "OR (ls.languagesskill_id.language_id = :languages)) "
			
			// busca por idade
			+ "OR  (DATE_FORMAT(CURDATE(), '%Y') - DATE_FORMAT(c.birthdate, '%Y') = :age) "
			
			// busca por range de idade
			+ "OR  (DATE_FORMAT(CURDATE(), '%Y') - DATE_FORMAT(c.birthdate, '%Y') >= :ageini "
			+ "AND DATE_FORMAT(CURDATE(), '%Y') - DATE_FORMAT(c.birthdate, '%Y') <= :agefim) ")  
	
	List<Candidato> filter(
			@Param("identificationDocument")String identificationDocument,
			@Param("gender")int gender,
			@Param("area_interest")String area_interest,
			@Param("coursename")String coursename,
			@Param("roleName")String roleName,
			@Param("academicQualificationStatusId") int academicQualificationStatusId);
			
	
	
	
}