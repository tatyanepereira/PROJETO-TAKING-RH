package br.com.taking.ProjetoGestaoRH.repository;


import java.util.List;

import org.springframework.data.jpa.repository.JpaRepository;
import org.springframework.data.jpa.repository.Query;
import org.springframework.data.repository.query.Param;

import br.com.taking.ProjetoGestaoRH.model.Candidato;

public interface CandidatoRepository extends JpaRepository<Candidato, Integer>{
	
	
	// FILTRO DE CANDIDATO POR DOCUMENTO DE IDENTIFICAÇÃO
	@Query("select c from Candidato c where c.identificationDocument = :identificationDocument")
	List<Candidato> findAll(String identificationDocument);
	
	// FILTRO DE CANDIDATO POR GÊNERO
	@Query("select c from Candidato c where c.gender_id.gender_id = :gender")
	List<Candidato> findByGender(int gender);
	
	// FILTRO DE CANDIDATO POR AREA DE INTERESSE
	@Query("select c from Candidato c join c.areaInterest_id a where a.areaInterest_id = :areaInterest")
	List<Candidato> findByAreaInterest(int areaInterest);
	
	// FILTRO DE CANDIDATO POR INTERVALO DE IDADE
	@Query("select c from Candidato c where DATE_FORMAT(CURDATE(), '%Y') - DATE_FORMAT(c.birthdate, '%Y') >= :age1 " +
	            "and DATE_FORMAT(CURDATE(), '%Y') - DATE_FORMAT(c.birthdate, '%Y') <= :age2 " +
	            "and DATE_FORMAT(CURDATE(), '%Y') - DATE_FORMAT(c.birthdate, '%Y') <= 35 " +
	            "and DATE_FORMAT(CURDATE(), '%Y') - DATE_FORMAT(c.birthdate, '%Y') >= 18")
	List<Candidato> filterAges(int age1, int age2);
	

}